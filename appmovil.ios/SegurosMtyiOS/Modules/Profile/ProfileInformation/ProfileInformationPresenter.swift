//
//  ProfileInformationPresenter.swift
//  SegurosMtyiOS
//
//  Created by Erwin Jonnatan Perez TÃ©llez on 05/01/18.
//  Copyright (c) 2018 IA Interactive. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol ProfileInformationPresentationLogic {
    func presentEmergencyContacts(response: ProfileInformation.GetEmergencyContacts.Response)
    func presentError(error: Error)
}

class ProfileInformationPresenter: ProfileInformationPresentationLogic {
    weak var viewController: (ProfileInformationDisplayLogic & ExpiredSessionDisplayLogic & ErrorDisplayLogic)?
    
    // MARK: Do something
    
    func presentEmergencyContacts(response: ProfileInformation.GetEmergencyContacts.Response) {
        var errorMessage: String?
        if let error = response.error {
            switch error {
            case NetworkingError.noInternet:
                errorMessage = LocalizableKeys.Profile.EditProfile.errorNoInternet
            case NetworkingError.noSuccessStatusCode(let code, _):
                if code != 1 { // 1 = No hay contactos de emergencia asociados al usuario
                    errorMessage = LocalizableKeys.Directory.Map.genericError
                }
            default:
                errorMessage = LocalizableKeys.Directory.Map.genericError
            }
        }
        
        let viewModel = ProfileInformation.GetEmergencyContacts.ViewModel(emergencyContacts: response.emergencyContacts, errorMessage: errorMessage)
        self.viewController?.displayEmergencyContacts(viewModel: viewModel)
    }
    
    func presentError(error: Error) {
        self.viewController?.dismissWelcomeView()
        
        switch error {
        case NetworkingError.noInternet:
            self.viewController?.displayError(with: LocalizableKeys.General.noInternet)
        default:
            break
        }
    }
}

extension ProfileInformationPresenter : ExpiredSessionPresentationLogic {
    func presentExpiredSession() {
        self.viewController?.displayExpiredSession()
    }
}
