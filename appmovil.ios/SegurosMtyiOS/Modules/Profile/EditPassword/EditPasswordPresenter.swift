//
//  EditPasswordPresenter.swift
//  SegurosMtyiOS
//
//  Created by Erwin Jonnatan Perez TÃ©llez on 28/12/17.
//  Copyright (c) 2017 IA Interactive. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol EditPasswordPresentationLogic {
    func presentSomething(response: EditPassword.Something.Response)
    func showMessageForValidatingNewPassword(validationState: TextFieldValidationState)
    func showMessageForRepeatPassword(validationState: TextFieldValidationState)
    func showMessageForValidatingOldPassword(validationState: TextFieldValidationState)
    func successfullPasswordUpdate()
    func errorUpdatingPassword()
}

class EditPasswordPresenter: EditPasswordPresentationLogic {
    weak var viewController: (EditPasswordDisplayLogic & ExpiredSessionDisplayLogic & ErrorDisplayLogic)?
    
    // MARK: Do something
    
    func presentSomething(response: EditPassword.Something.Response) {
    }
    
    func showMessageForValidatingNewPassword(validationState: TextFieldValidationState) {
        viewController?.showMessageNewPassword(validationState)
    }
    
    func showMessageForRepeatPassword(validationState: TextFieldValidationState) {
        viewController?.showMessageForRepeatPassword(validationState)
    }
    
    func showMessageForValidatingOldPassword(validationState: TextFieldValidationState) {
        viewController?.showMessageActualPassword(validationState)
    }
    
    func successfullPasswordUpdate() {
        viewController?.successfullPasswordUpdate()
    }
    
    func errorUpdatingPassword() {
        viewController?.displayError(with: LocalizableKeys.Profile.EditPassword.genericError)
    }
    
}

// MARK: - Error Presentation Logic
extension EditPasswordPresenter: ErrorPresentationLogic {
    func presentError(_ error: Error) {
        var message: String!
        switch error {
        case NetworkingError.noInternet:
            message = LocalizableKeys.Profile.EditProfile.errorNoInternet
            viewController?.displayError(with: message)
        case NetworkingError.unauthorized:
            presentExpiredSession()
        case EditPasswordError.unsuccessfulEditPassword(status: .invalidPassword(let attempts, _)):
            
            viewController?.displayError(with: LocalizableKeys.Profile.EditPassword.errorPassword)
            
        case EditPasswordError.unsuccessfulEditPassword(status: .noInternet(let message)):
            viewController?.displayError(with: message)
        case EditPasswordError.unsuccessfulEditPassword(status: .unauthorized(_)):
            presentExpiredSession()
        case EditPasswordError.unsuccessfulEditPassword(status: .other(let message)):
            viewController?.displayError(with: message)
        default:
            viewController?.errorUpdatingPassword()
        }
        
    }
}

// MARK: - Expired Session Presentation Logic Methods
extension EditPasswordPresenter: ExpiredSessionPresentationLogic {
    func presentExpiredSession() {
        viewController?.displayExpiredSession()
    }
}
