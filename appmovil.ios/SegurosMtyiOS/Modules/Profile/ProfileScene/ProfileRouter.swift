//
//  ProfileRouter.swift
//  SegurosMtyiOS
//
//  Created by Isidro Adan Garcia Solorio  on 12/7/17.
//  Copyright (c) 2017 IA Interactive. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileRoutingLogic {
    func goToEditProfileViewController()
    func goToAddPolicy()
    func routeToDetailEmergencyContact()
    func routeToPolicyDetail(_ policy: InsurancePolicy)
    func routeToAddManualEmergencyContact()
}

protocol ProfileDataPassing {
    var dataStore: ProfileDataStore? { get set }
}

class ProfileRouter: NSObject, ProfileRoutingLogic, ProfileDataPassing {
    func presentDetailEmergencyContact() {
        
    }
    
    weak var viewController: ProfileViewController?
    var dataStore: ProfileDataStore?
    
    // MARK: Routing
    func goToEditProfileViewController() {
        let storyBoard = UIStoryboard.editProfile()
        guard let editProfileVC = storyBoard.instantiateInitialViewController() as? EditProfileViewController else { return }
        viewController?.show(editProfileVC, sender: nil)
    }
    
    func routeToDetailEmergencyContact() {
        let storyBoard = UIStoryboard.emergencyContacts()
        guard let navigationController = storyBoard.instantiateInitialViewController() as? UINavigationController else { return }
        
        guard let detailEmergencyContactVC = navigationController.viewControllers.first as? DetailEmergencyContactViewController else { return }
        
        detailEmergencyContactVC.router?.dataStore?.emergencyContact = (dataStore?.emergencyContact)!
        navigationController.modalPresentationStyle = .overFullScreen
        viewController?.present(navigationController, animated: true, completion: nil)
    }
    
    func routeToAddManualEmergencyContact() {
        let storyBoard = UIStoryboard.emergencyContacts()
         guard let editEmergencyContactVC = storyBoard.instantiateViewController(withIdentifier: "EditEmergencyContactViewController") as? EditEmergencyContactViewController else { return }
        
        viewController?.present(editEmergencyContactVC, animated: true, completion: nil)
    }

    
    func goToAddPolicy() {
        let storyBoard = UIStoryboard.perfil()
        guard let addPolicyVC = storyBoard.instantiateViewController(withIdentifier: "AddPolicyViewController") as? AddPolicyViewController else {return}
        viewController?.show(addPolicyVC, sender: nil)
        
    }
    
    
    func routeToPolicyDetail(_ policy: InsurancePolicy) {
        let storyBoard = UIStoryboard.policyDetail()
        guard let destinationVC = storyBoard.instantiateInitialViewController() as? PolicyDetailViewController else { return }
        
        var destinationDS = destinationVC.router?.dataStore
        passDataToPolicyDetail(selectedPolicy: policy, destination: &destinationDS)
        navigateToPolicyDetail(source: viewController!, destination: destinationVC)
    }
    
   
    // MARK: - Navigation
    func navigateToPolicyDetail(source: UIViewController, destination: UIViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK: - Passing data
    func passDataToPolicyDetail(selectedPolicy: InsurancePolicy?, destination: inout PolicyDetailDataStore?) {
        destination?.policy = selectedPolicy
    }
}
