//
//  PolicyAssistanceDetailInteractor.swift
//  SegurosMtyiOS
//
//  Created by Isidro Adan Garcia Solorio  on 1/24/18.
//  Copyright (c) 2018 IA Interactive. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
import RxSwift

protocol PolicyAssistanceDetailBusinessLogic {
    func loadData()
    func loadRemoteData()
}

protocol PolicyAssistanceDetailDataStore {
    var assistance: AssistanceType { get set }
}

class PolicyAssistanceDetailInteractor: PolicyAssistanceDetailBusinessLogic, PolicyAssistanceDetailDataStore {
    var disposableBag = DisposeBag()
    var assistance: AssistanceType = .medic
    
    var presenter: (PolicyAssistanceDetailPresentationLogic & ErrorPresentationLogic & ExpiredSessionPresentationLogic)?
    var worker: PolicyAssistanceDetailWorker?
    
    func loadData() {
        presenter?.presentData(response: assistance)
    }
    
    func loadRemoteData() {
        worker = PolicyAssistanceDetailWorker()
        worker?.getAssistancesInfo(assistanceType: self.assistance).subscribe({ (event) in
            switch event {
            case .next(let result):
                self.presenter?.presentRemoteData(response: result)
            case .error(let error):
                switch error {
                case NetworkingError.unauthorized:
                    self.presenter?.presentExpiredSession()
                default:
                    self.presenter?.presentError(error)
                }
            default:
                break
            }
        }).disposed(by: disposableBag)
    }
}
