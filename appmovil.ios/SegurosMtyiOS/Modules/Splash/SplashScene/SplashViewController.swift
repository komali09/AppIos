//
//  SplashViewController.swift
//  SegurosMtyiOS
//
//  Created by Erwin Jonnatan Perez TÃ©llez on 30/11/17.
//  Copyright (c) 2017 IA Interactive. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Lottie
import AVKit

protocol SplashDisplayLogic: class {
    func displayAnimationLogo(viewModel: Splash.AnimationLogo.ViewModel.ViewModelAnimation)
    func playVideo(viewModel: Splash.PlayVideo.ViewModel.ViewModelPlayVideo)
}

class SplashViewController: UIViewController, SplashDisplayLogic {
    var interactor: SplashBusinessLogic?
    var router: (NSObjectProtocol & SplashRoutingLogic & SplashDataPassing)?
    
    @IBOutlet weak var font: UIImageView!
    
    var animationLogo: LOTAnimationView?
    var avPlayer: AVPlayer?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = SplashInteractor()
        let presenter = SplashPresenter()
        let router = SplashRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        playAnimationLogo()
    }
    
    // MARK: Do something
    
    func playAnimationLogo() {
        interactor?.loadSplashAnimation()
    }
    
    func playVideo() {
        interactor?.loadVideo()
    }
    
    func displayAnimationLogo(viewModel: Splash.AnimationLogo.ViewModel.ViewModelAnimation) {
        animationLogo = viewModel.animationLogo
        animationLogo?.frame = CGRect(x: -15, y: 0, width: self.view.frame.width, height: self.view.frame.height)
        animationLogo?.clipsToBounds = true
        animationLogo?.contentMode = UIViewContentMode.scaleAspectFit
        animationLogo?.loopAnimation = false
        self.view.addSubview(animationLogo!)
        
        animationLogo?.play { (finished) in
            self.router?.goToLoginViewController(segue: nil)
        }
    }
    
    func playVideo(viewModel: Splash.PlayVideo.ViewModel.ViewModelPlayVideo) {
        avPlayer = viewModel.avPlayer
        
        let playerLayer = AVPlayerLayer(player: avPlayer)
        playerLayer.frame = CGRect(x: 0, y: 0, width: self.view.frame.width, height: self.view.frame.height)
        self.view.layer.addSublayer(playerLayer)
        self.view.bringSubview(toFront: font)
        self.view.bringSubview(toFront: animationLogo!)
        avPlayer?.volume = 0
        avPlayer?.play()
    }
}
