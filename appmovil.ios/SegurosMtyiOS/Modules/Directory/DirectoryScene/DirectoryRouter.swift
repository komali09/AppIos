//
//  DirectoryRouter.swift
//  SegurosMtyiOS
//
//  Created by Erwin Perez Tellez on 05/12/17.
//  Copyright (c) 2017 Erwin Jonnatan Perez TÃ©llez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DirectoryRoutingLogic {
    func passLocationData(to destination: inout DirectoryDataStore)
    func goToWelcome()
    func routeToFilters(destinationVC: MainPulleyViewController)
    func goToStateList()
}

protocol DirectoryDataPassing {
    var dataStore: DirectoryDataStore? { get set }
    var filterDataStore: FiltersDataStore? { get set }
}

class DirectoryRouter: NSObject, DirectoryRoutingLogic, DirectoryDataPassing {
    weak var viewController: DirectoryViewController?
    var dataStore: DirectoryDataStore?
    var filterDataStore: FiltersDataStore?
    
    // MARK: Passing data
    
    func goToWelcome() {
        UIStoryboard.loadWelcome()
    }
    
    func goToStateList() {
        let storyBoard = UIStoryboard.directoryFilter()
        if let vc = storyBoard.instantiateViewController(withIdentifier: "stateList") as? SelectionPulleyViewController {
            vc.routerNoInternet = true
            viewController?.present(vc, animated: true, completion: nil)
        }
    }
    
    func passLocationData(to destination: inout DirectoryDataStore) {
        guard let data = self.dataStore else { return }
        destination.isPlanIncludedOnly = data.isPlanIncludedOnly
        destination.locations = data.locations
    }
    
    func routeToFilters(destinationVC: MainPulleyViewController) {
        destinationVC.router?.dataStore = self.filterDataStore
    }
}
